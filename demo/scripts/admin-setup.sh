#!/bin/bash

echo "👨‍💼 ADMIN: Setting up Universal Identity Environment"
echo "=================================================="
echo ""
echo "This script represents the ADMIN persona from the workflow diagram:"
echo "1. Admin creates UID authentication method"
echo "2. Admin generates initial UID token"
echo "3. Admin provisions token to client machine(s)"
echo ""

# Check if Akeyless CLI is installed
if ! command -v akeyless &> /dev/null; then
    echo "❌ Akeyless CLI not found. Please install it first."
    exit 1
fi

echo "✅ Akeyless CLI found: $(akeyless --version)"
echo ""

# Check for admin credentials
if [ -z "$AKEYLESS_ACCESS_ID" ] || [ -z "$AKEYLESS_ACCESS_KEY" ]; then
    echo "❌ Admin credentials required:"
    echo "   export AKEYLESS_ACCESS_ID=\"your-admin-access-id\""
    echo "   export AKEYLESS_ACCESS_KEY=\"your-admin-access-key\""
    exit 1
fi

# Configure as admin
akeyless configure --access-id "$AKEYLESS_ACCESS_ID" --access-key "$AKEYLESS_ACCESS_KEY" --gateway-url "${AKEYLESS_GATEWAY:-https://api.akeyless.io}"

echo "🔐 Testing admin authentication..."
if ! akeyless auth --access-id "$AKEYLESS_ACCESS_ID" --access-key "$AKEYLESS_ACCESS_KEY" > /dev/null 2>&1; then
    echo "❌ Admin authentication failed"
    exit 1
fi
echo "✅ Admin authentication successful"
echo ""

# Step 1: Admin creates UID authentication method
echo "🆔 Step 1: Admin creates UID authentication method..."
AUTH_METHOD="/demo/uid-non-human-auth"

akeyless auth-method create universal-identity \
    --name "$AUTH_METHOD" \
    --description "Demo Universal Identity for non-human authentication" \
    --ttl 60 \
    --jwt-ttl 720 || echo "Auth method may already exist"

# Get the access ID
ACCESS_ID=$(akeyless auth-method get --name "$AUTH_METHOD" | grep "auth_method_access_id" | cut -d'"' -f4)
echo "✅ UID Auth Method created: $AUTH_METHOD"
echo "✅ Access ID: $ACCESS_ID"
echo ""

# Step 2: Admin creates demo resources
echo "🔑 Step 2: Admin creates demo secret and access policies..."

akeyless create-secret \
    --name "/demo/database-config" \
    --value '{
        "host": "demo-db.company.com",
        "port": 5432,
        "database": "production",
        "username": "app_user",
        "password": "super_secure_password_123"
    }' || echo "Secret may already exist"

akeyless create-role \
    --name "/demo/non-human-access-role" \
    --description "Demo role for non-human access" || echo "Role may already exist"

akeyless assoc-role-am \
    --role-name "/demo/non-human-access-role" \
    --am-name "$AUTH_METHOD" || echo "Association may already exist"

akeyless set-role-rule \
    --role-name "/demo/non-human-access-role" \
    --path "/demo/*" \
    --capability read || echo "Rule may already exist"

echo "✅ Demo resources configured"
echo ""

# Step 3: Admin generates initial UID token for client
echo "🎫 Step 3: Admin generates initial UID token for client machine..."
echo "Command: akeyless uid-generate-token --auth-method-name '$AUTH_METHOD'"

UID_TOKEN_OUTPUT=$(akeyless uid-generate-token --auth-method-name "$AUTH_METHOD")
UID_TOKEN=$(echo "$UID_TOKEN_OUTPUT" | grep "Token:" | awk '{print $2}')

if [ -z "$UID_TOKEN" ]; then
    echo "❌ Failed to generate initial UID token"
    echo "Output: $UID_TOKEN_OUTPUT"
    exit 1
fi

echo "✅ Initial UID token generated: ${UID_TOKEN:0:20}..."
echo ""

# Step 4: Admin provisions token to client machine
echo "💾 Step 4: Admin provisions token to client machine..."
mkdir -p ./tokens

# Create client token file (this simulates deploying to client machine)
cat > ./tokens/client-tokens << EOF
# Universal Identity Token for Client Machine
# Generated by admin on $(date)
# This file would be securely transferred to the client machine
UID_TOKEN=$UID_TOKEN
ACCESS_ID=$ACCESS_ID
AUTH_METHOD=$AUTH_METHOD
AKEYLESS_GATEWAY=${AKEYLESS_GATEWAY:-https://api.akeyless.io}
EOF

chmod 600 ./tokens/client-tokens

echo "✅ Client token file created: ./tokens/client-tokens"
echo ""

echo "🎉 ADMIN SETUP COMPLETE!"
echo "======================="
echo ""
echo "📋 Admin created:"
echo "   - UID Authentication Method: $AUTH_METHOD"
echo "   - Demo Secret: /demo/database-config"
echo "   - Access Role: /demo/non-human-access-role"
echo "   - Initial UID Token: ${UID_TOKEN:0:20}..."
echo ""
echo "📦 Client provisioning:"
echo "   - Token file: ./tokens/client-tokens"
echo "   - Ready for client machine deployment"
echo ""
echo "🚀 Next step: Deploy client token to target machine and run:"
echo "   ./scenarios/client-workflow.sh"
echo ""
echo "💡 In production:"
echo "   - Securely transfer ./tokens/client-tokens to client machine"
echo "   - Remove token from admin machine"
echo "   - Client machine runs self-contained workflows" 